class Solution{
    public:
    //arr1,arr2 : the arrays
    // n, m: size of arrays
    //Function to return a list containing the union of the two arrays. 
    vector<int> findUnion(int arr1[], int arr2[], int n, int m)
    {
        //Your code here
        //return vector with correct order of elements
        vector<int> unionOfArrays;

        int i=0,j=0,temp;
        
        //pushing first element to new array from one of two arrays
        if(arr1[i]<arr2[j])
            unionOfArrays.push_back(arr1[i++]);
        else
            unionOfArrays.push_back(arr2[j++]);
        
        //By merging of two arrays with some modification
        while(i<n && j<m){
            if(arr1[i]<arr2[j]){
                temp=arr1[i];
                i++;
            }
            else{
                temp=arr2[j];
                j++;
            }
            //checking the last element of new array is equal to the inserting element or not
            if(temp!=unionOfArrays.back())
                unionOfArrays.push_back(temp);
        }
        while(i<n){            
            //checking the last element of new array is equal to the inserting element or not
            if(arr1[i]!=unionOfArrays.back())
               unionOfArrays.push_back(arr1[i]);
            i++;
        }
        while(j<m){
            //checking the last element of new array is equal to the inserting element or not
            if(arr2[j]!=unionOfArrays.back())
               unionOfArrays.push_back(arr2[j]);
            j++;
        }
        return unionOfArrays;
    }
};
