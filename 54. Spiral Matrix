class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int m=matrix.size(),n=matrix[0].size();
        vector<int> result;
        int count=0,total=m*n;

        //taking boundary in all directions
        int top=0,down=m-1;
        int left=0,right=n-1;
        while(count<total){
            //traversing starting row
            for(int i=left;count<total && i<=right;++i){
                result.push_back(matrix[top][i]);
                ++count;
            }
            ++top;
            //traversing ending column
            for(int i=top;count<total && i<=down;++i){
                result.push_back(matrix[i][right]);
                ++count;
            }
            --right;
            //traversing ending row
            for(int i=right;count<total && i>=left;--i){
                result.push_back(matrix[down][i]);
                ++count;
            }
            --down;
            //traversing starting column
            for(int i=down;count<total && i>=top;--i){
                result.push_back(matrix[i][left]);
                ++count;
            }
            ++left;
            }
            return result;
        }
};
